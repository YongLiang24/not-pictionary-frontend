{"ast":null,"code":"import _defineProperty from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yong/new-pictionary/not-pictionary-frontend/src/containers/PlayerInteraction.js\";\nimport React, { Component, Fragment } from 'react';\nimport NewGuessForm from '../components/NewGuessForm';\nimport AnswerForm from '../components/AnswerForm';\nimport GuessList from '../components/GuessList';\nimport { API_ROOT, HEADERS } from '../constants';\nimport Timer from '../components/Timer';\n\nvar PlayerInteraction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayerInteraction, _Component);\n\n  function PlayerInteraction() {\n    var _this;\n\n    _classCallCheck(this, PlayerInteraction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayerInteraction).call(this));\n\n    _this.handleGameForms = function (ev) {\n      var _JSON$stringify;\n\n      ev.preventDefault();\n      var formType = ev.target.name;\n      var formValue = ev.target[formType].value;\n      var playerId = JSON.parse(localStorage.getItem('playerData')).playerId;\n      var type = 'form';\n      fetch(API_ROOT + \"/game/\".concat(_this.props.gameId), {\n        method: 'PATCH',\n        headers: HEADERS,\n        body: JSON.stringify((_JSON$stringify = {}, _defineProperty(_JSON$stringify, formType, formValue), _defineProperty(_JSON$stringify, \"playerId\", playerId), _defineProperty(_JSON$stringify, \"type\", type), _JSON$stringify))\n      });\n\n      if (ev.target.name === \"answer\") {\n        console.log(\"answerForm check\", ev.target.answer.value); //triggers the timer channel\n\n        var timer = {\n          currentGameId: _this.props.gameId\n        };\n        fetch(API_ROOT + '/timer', {\n          method: 'POST',\n          headers: HEADERS,\n          body: JSON.stringify(timer)\n        }); //timer channel ends\n\n        _this.setState({\n          answerInput: ev.target.answer.value,\n          hideAnswerForm: true\n        });\n      }\n    };\n\n    _this.state = {\n      answerInput: '',\n      hideAnswerForm: false,\n      answerString: \"Your Answer: \"\n    };\n    return _this;\n  }\n\n  _createClass(PlayerInteraction, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.isDrawing) {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, this.state.hideAnswerForm ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.state.answerString, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.state.answerInput)) : React.createElement(AnswerForm, {\n          handleForm: this.handleGameForms,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(GuessList, {\n          gameId: this.props.gameId,\n          isDrawing: this.props.isDrawing,\n          gameOver: this.props.gameOver,\n          endGame: this.props.endGame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(NewGuessForm, {\n          handleForm: this.handleGameForms,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(GuessList, {\n          gameId: this.props.gameId,\n          isDrawing: this.props.isDrawing,\n          gameOver: this.props.gameOver,\n          endGame: this.props.endGame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return PlayerInteraction;\n}(Component);\n\nexport default PlayerInteraction;","map":{"version":3,"sources":["/Users/yong/new-pictionary/not-pictionary-frontend/src/containers/PlayerInteraction.js"],"names":["React","Component","Fragment","NewGuessForm","AnswerForm","GuessList","API_ROOT","HEADERS","Timer","PlayerInteraction","handleGameForms","ev","preventDefault","formType","target","name","formValue","value","playerId","JSON","parse","localStorage","getItem","type","fetch","props","gameId","method","headers","body","stringify","console","log","answer","timer","currentGameId","setState","answerInput","hideAnswerForm","state","answerString","isDrawing","gameOver","endGame"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport NewGuessForm from '../components/NewGuessForm';\nimport AnswerForm from '../components/AnswerForm';\nimport GuessList from '../components/GuessList';\nimport { API_ROOT, HEADERS } from '../constants';\nimport Timer from '../components/Timer';\n\nclass PlayerInteraction extends Component{\n\n  constructor(){\n    super()\n    this.state={\n      answerInput: '',\n      hideAnswerForm: false,\n      answerString: \"Your Answer: \"\n    }\n  }\n\n  handleGameForms = (ev) => {\n    ev.preventDefault()\n    const formType = ev.target.name\n    const formValue = ev.target[formType].value\n    const playerId = JSON.parse(localStorage.getItem('playerData')).playerId\n    const type = 'form'\n\n    fetch(API_ROOT+`/game/${this.props.gameId}`, {\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify({[formType]: formValue, playerId, type})\n    })\n\n    if(ev.target.name === \"answer\"){\n      console.log(\"answerForm check\", ev.target.answer.value)\n      //triggers the timer channel\n      const timer = {\n        currentGameId: this.props.gameId\n      }\n      fetch(API_ROOT + '/timer', {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify(timer)\n      })\n      //timer channel ends\n      this.setState({\n        answerInput: ev.target.answer.value,\n        hideAnswerForm: true\n      })\n    }\n\n  }\n\n\n\nrender(){\n  if (this.props.isDrawing) {\n    return (\n      <Fragment>\n        {\n          this.state.hideAnswerForm ?\n            <div>{this.state.answerString} <strong>{this.state.answerInput}</strong></div> :\n            <AnswerForm handleForm={this.handleGameForms}/>\n        }\n\n        <GuessList\n          gameId={this.props.gameId}\n          isDrawing={this.props.isDrawing}\n          gameOver={this.props.gameOver}\n          endGame={this.props.endGame}\n        />\n      </Fragment>\n    )\n  }\n  else {\n    return (\n      <Fragment>\n        <NewGuessForm handleForm={this.handleGameForms}/>\n        <GuessList\n          gameId={this.props.gameId}\n          isDrawing={this.props.isDrawing}\n          gameOver={this.props.gameOver}\n          endGame={this.props.endGame}\n        />\n      </Fragment>\n    )\n  }\n}\n\n}\n\nexport default PlayerInteraction;\n"]},"metadata":{},"sourceType":"module"}