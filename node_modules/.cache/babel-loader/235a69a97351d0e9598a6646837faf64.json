{"ast":null,"code":"import _classCallCheck from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yong/new-pictionary/not-pictionary-frontend/src/components/GuessList.js\";\nimport React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nvar GuessList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GuessList, _Component);\n\n  function GuessList(props) {\n    var _this;\n\n    _classCallCheck(this, GuessList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GuessList).call(this, props));\n\n    _this.handleReject = function (ev) {\n      console.log('checkBuytton', ev.target.value);\n\n      _this.setState({\n        isRejected: true\n      }); // fetch(API_ROOT+`/game/${this.props.gameId}`)\n      // .then(resp => resp.json())\n      // .then(json =>{\n      //   console.log('updateMessage', json)\n      //   let rejectList = this.state.rejectedGuesses.slice()\n      //   rejectList.push(json[json.length-1])\n      //   this.setState({\n      //     rejectedGuesses: rejectList\n      //   })\n      // })\n\n    };\n\n    _this.updateMessage = function () {\n      fetch(API_ROOT + \"/game/\".concat(_this.props.gameId)).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        console.log('updateMessage', json);\n\n        _this.setState({\n          guessList: json[json.length - 1],\n          rejectValue: json[json.length - 1]\n        });\n\n        if (_this.state.isRejected) {\n          var tempArray = _this.state.rejectedGuesses.slice();\n\n          tempArray.push(json[json.length - 1]);\n\n          _this.setState({\n            rejectedGuesses: tempArray\n          });\n        }\n      }); // console.log(this.state.buttonValue)\n      // alert('We have a Winner, Thanks for playing.')\n      // setTimeout(window.location = 'http://localhost:3001/games', 3000)\n    };\n\n    _this.state = {\n      guessList: [],\n      rejectedGuesses: [],\n      rejectValue: '',\n      isRejected: false\n    };\n    return _this;\n  }\n\n  _createClass(GuessList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // fetch(API_ROOT+`/game/${this.props.gameId}`)\n      // .then(resp => resp.json())\n      // .then(json => {\n      //   if (json) {\n      //   this.setState({\n      //     guessList: json,\n      //     rejectedGuesses: json\n      //   })}\n      // })\n      setInterval(this.updateMessage, 4000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.isDrawing) {\n        this.acc || (this.acc = null);\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, this.acc, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Guess List\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, this.state.rejectValue, React.createElement(\"button\", {\n          name: \"Accept\",\n          onClick: this.handleClick,\n          value: null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Accept\"), React.createElement(\"button\", {\n          name: \"Reject\",\n          onClick: this.handleReject,\n          value: this.state.rejectValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Reject\"))));\n      } else {\n        this.acc || (this.acc = null);\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.acc, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Rejected Guess List\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, this.state.rejectedGuesses.map(function (guess, idx) {\n          return React.createElement(\"li\", {\n            key: idx,\n            style: {\n              textDecoration: 'line-through'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, guess);\n        })));\n      }\n    }\n  }]);\n\n  return GuessList;\n}(Component);\n\nexport default GuessList;","map":{"version":3,"sources":["/Users/yong/new-pictionary/not-pictionary-frontend/src/components/GuessList.js"],"names":["React","Component","Fragment","API_ROOT","HEADERS","ActionCableConsumer","GuessList","props","handleReject","ev","console","log","target","value","setState","isRejected","updateMessage","fetch","gameId","then","resp","json","guessList","length","rejectValue","state","tempArray","rejectedGuesses","slice","push","setInterval","isDrawing","acc","handleClick","map","guess","idx","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nclass GuessList extends Component {\n  constructor(props) {\n     super(props)\n     this.state = {\n      guessList: [],\n      rejectedGuesses: [],\n      rejectValue: '',\n      isRejected: false\n     }\n   }\n\n  componentDidMount() {\n     // fetch(API_ROOT+`/game/${this.props.gameId}`)\n     // .then(resp => resp.json())\n     // .then(json => {\n     //   if (json) {\n     //   this.setState({\n     //     guessList: json,\n     //     rejectedGuesses: json\n     //   })}\n     // })\n     setInterval(this.updateMessage, 4000)\n   }\n\n  handleReject = (ev) => {\n    console.log('checkBuytton',ev.target.value)\n  this.setState({\n    isRejected: true\n  })\n    // fetch(API_ROOT+`/game/${this.props.gameId}`)\n    // .then(resp => resp.json())\n    // .then(json =>{\n    //   console.log('updateMessage', json)\n    //   let rejectList = this.state.rejectedGuesses.slice()\n    //   rejectList.push(json[json.length-1])\n    //   this.setState({\n    //     rejectedGuesses: rejectList\n    //   })\n    // })\n\n\n   }\n\nupdateMessage = () =>{\n  fetch(API_ROOT+`/game/${this.props.gameId}`)\n  .then(resp => resp.json())\n  .then(json =>{\n    console.log('updateMessage', json)\n    this.setState({\n      guessList: json[json.length-1],\n      rejectValue: json[json.length-1]\n    })\n\n    if(this.state.isRejected){\n      let tempArray = this.state.rejectedGuesses.slice()\n      tempArray.push(json[json.length-1])\n      this.setState({\n        rejectedGuesses: tempArray\n      })\n    }\n  })\n\n  // console.log(this.state.buttonValue)\n  // alert('We have a Winner, Thanks for playing.')\n  // setTimeout(window.location = 'http://localhost:3001/games', 3000)\n}\n\n  render() {\n    if (this.props.isDrawing) {\n      this.acc || (this.acc = null)\n      return (\n        <Fragment>\n          {this.acc}\n          <h4>Guess List</h4>\n          <ul>\n                <li>{this.state.rejectValue}\n                  <button\n\n                    name='Accept'\n                    onClick={this.handleClick}\n                    value={null}\n                  >\n                    Accept\n                  </button>\n                  <button\n\n                    name='Reject'\n                    onClick={this.handleReject}\n                    value={this.state.rejectValue}\n                  >\n                    Reject\n                  </button>\n                </li>\n\n          </ul>\n        </Fragment>\n      )\n    } else {\n      this.acc || (this.acc = null)\n      return (\n        <Fragment>\n          {this.acc}\n          <h4>Rejected Guess List</h4>\n          <ul>\n            {this.state.rejectedGuesses.map((guess, idx) => {\n              return <li key={idx} style={{textDecoration: 'line-through'}}>{guess}</li>\n              })}\n          </ul>\n        </Fragment>\n      )\n    }\n  }\n}\n\nexport default GuessList\n"]},"metadata":{},"sourceType":"module"}