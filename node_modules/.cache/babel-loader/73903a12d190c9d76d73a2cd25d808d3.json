{"ast":null,"code":"import _classCallCheck from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yong/new-pictionary/not-pictionary-frontend/src/components/Timer.js\";\nimport React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      seconds: 59,\n      minutes: 1,\n      interval: ''\n    };\n\n    _this.startTimer = function (e) {\n      _this.state.interval = setInterval(_this.timer, 1000); // let clickedButton = this.refs.timerButton\n      // clickedButton.disabled = true;\n\n      console.log('checkStartTimer');\n      var timer = {\n        currentGameId: _this.props.gameId\n      };\n      fetch(API_ROOT + '/timer', {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify(timer)\n      });\n    };\n\n    _this.timer = function () {\n      var tempSeconds = _this.state.seconds;\n\n      if (_this.state.minutes > -1) {\n        _this.setState({\n          seconds: tempSeconds - 1\n        });\n      } else {\n        _this.setState({\n          seconds: 0,\n          minutes: 0\n        }); // setTimeout(alert(\"Time's Up, Click 'Ok' to end the game\"), 3000)\n\n\n        clearInterval(_this.state.interval); // window.location = 'http://localhost:3001/games'\n      }\n\n      if (_this.state.seconds === 0) {\n        var tempMinutes = _this.state.minutes;\n\n        _this.setState({\n          seconds: 59,\n          minutes: tempMinutes - 1\n        });\n      }\n    };\n\n    _this.handleReceivedTimer = function (resp) {\n      console.log(\"timer\", resp);\n      _this.state.interval = setInterval(_this.timer, 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.withButton) {\n        return React.createElement(React.Fragment, null, React.createElement(ActionCableConsumer, {\n          channel: {\n            channel: 'TimerChannel',\n            id: \"\".concat(this.props.gameId)\n          },\n          onReceived: this.handleReceivedTimer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          id: \"timerBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Timer: \", this.state.minutes, \" : \", this.state.seconds));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(ActionCableConsumer, {\n          channel: {\n            channel: 'TimerChannel',\n            id: \"\".concat(this.props.gameId)\n          },\n          onReceived: this.handleReceivedTimer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          id: \"timerBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Timer: \", this.state.minutes, \" : \", this.state.seconds));\n      }\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["/Users/yong/new-pictionary/not-pictionary-frontend/src/components/Timer.js"],"names":["React","Component","Fragment","API_ROOT","HEADERS","ActionCableConsumer","Timer","state","seconds","minutes","interval","startTimer","e","setInterval","timer","console","log","currentGameId","props","gameId","fetch","method","headers","body","JSON","stringify","tempSeconds","setState","clearInterval","tempMinutes","handleReceivedTimer","resp","withButton","channel","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,cAAlC;AACA,SAASC,mBAAT,QAAoC,4BAApC;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAM;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,QAAQ,EAAE;AAHN,K;;UAMNC,U,GAAa,UAACC,CAAD,EAAK;AAChB,YAAKL,KAAL,CAAWG,QAAX,GAAsBG,WAAW,CAAC,MAAKC,KAAN,EAAa,IAAb,CAAjC,CADgB,CAEhB;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMF,KAAK,GAAG;AACZG,QAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWC;AADd,OAAd;AAGAC,MAAAA,KAAK,CAACjB,QAAQ,GAAG,QAAZ,EAAsB;AACzBkB,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,OAAO,EAAElB,OAFgB;AAGzBmB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,KAAf;AAHmB,OAAtB,CAAL;AAKD,K;;UAGDA,K,GAAQ,YAAI;AACV,UAAIY,WAAW,GAAG,MAAKnB,KAAL,CAAWC,OAA7B;;AACA,UAAG,MAAKD,KAAL,CAAWE,OAAX,GAAoB,CAAC,CAAxB,EAA0B;AACxB,cAAKkB,QAAL,CAAc;AACZnB,UAAAA,OAAO,EAAEkB,WAAW,GAAE;AADV,SAAd;AAGD,OAJD,MAKI;AACF,cAAKC,QAAL,CAAc;AACZnB,UAAAA,OAAO,EAAE,CADG;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd,EADE,CAMF;;;AACAmB,QAAAA,aAAa,CAAC,MAAKrB,KAAL,CAAWG,QAAZ,CAAb,CAPE,CAQF;AACD;;AAED,UAAG,MAAKH,KAAL,CAAWC,OAAX,KAAuB,CAA1B,EAA4B;AAC1B,YAAIqB,WAAW,GAAG,MAAKtB,KAAL,CAAWE,OAA7B;;AACA,cAAKkB,QAAL,CAAc;AACZnB,UAAAA,OAAO,EAAE,EADG;AAEZC,UAAAA,OAAO,EAAEoB,WAAW,GAAE;AAFV,SAAd;AAKD;AACF,K;;UAEDC,mB,GAAsB,UAACC,IAAD,EAAS;AAC7BhB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBe,IAArB;AACA,YAAKxB,KAAL,CAAWG,QAAX,GAAsBG,WAAW,CAAC,MAAKC,KAAN,EAAa,IAAb,CAAjC;AAED,K;;;;;;;6BACO;AACN,UAAG,KAAKI,KAAL,CAAWc,UAAd,EAAyB;AACvB,eACE,0CACE,oBAAC,mBAAD;AACE,UAAA,OAAO,EAAE;AAACC,YAAAA,OAAO,EAAE,cAAV;AAA0BC,YAAAA,EAAE,YAAI,KAAKhB,KAAL,CAAWC,MAAf;AAA5B,WADX;AAEE,UAAA,UAAU,EAAE,KAAKW,mBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAKE;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2B,KAAKvB,KAAL,CAAWE,OAAtC,SAAkD,KAAKF,KAAL,CAAWC,OAA7D,CALF,CADF;AAWD,OAZD,MAaK;AACH,eACE,0CACE,oBAAC,mBAAD;AACE,UAAA,OAAO,EAAE;AAACyB,YAAAA,OAAO,EAAE,cAAV;AAA0BC,YAAAA,EAAE,YAAI,KAAKhB,KAAL,CAAWC,MAAf;AAA5B,WADX;AAEE,UAAA,UAAU,EAAE,KAAKW,mBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAKE;AAAK,UAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2B,KAAKvB,KAAL,CAAWE,OAAtC,SAAkD,KAAKF,KAAL,CAAWC,OAA7D,CALF,CADF;AAUD;AAEF;;;;EAnFiBP,S;;AAsFpB,eAAeK,KAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nclass Timer extends Component{\n  state={\n    seconds: 59,\n    minutes: 1,\n    interval: ''\n  }\n\n  startTimer = (e)=>{\n    this.state.interval = setInterval(this.timer, 1000)\n    // let clickedButton = this.refs.timerButton\n    // clickedButton.disabled = true;\n    console.log('checkStartTimer')\n    const timer = {\n      currentGameId: this.props.gameId\n    }\n    fetch(API_ROOT + '/timer', {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify(timer)\n    })\n  }\n\n\n  timer = ()=>{\n    let tempSeconds = this.state.seconds\n    if(this.state.minutes >-1){\n      this.setState({\n        seconds: tempSeconds -1\n      })\n    }\n    else{\n      this.setState({\n        seconds: 0,\n        minutes: 0\n      })\n\n      // setTimeout(alert(\"Time's Up, Click 'Ok' to end the game\"), 3000)\n      clearInterval(this.state.interval)\n      // window.location = 'http://localhost:3001/games'\n    }\n\n    if(this.state.seconds === 0){\n      let tempMinutes = this.state.minutes\n      this.setState({\n        seconds: 59,\n        minutes: tempMinutes -1\n\n      })\n    }\n  }\n\n  handleReceivedTimer = (resp) =>{\n    console.log(\"timer\", resp)\n    this.state.interval = setInterval(this.timer, 1000)\n\n  }\n  render(){\n    if(this.props.withButton){\n      return(\n        <>\n          <ActionCableConsumer\n            channel={{channel: 'TimerChannel', id:`${this.props.gameId}`}}\n            onReceived={this.handleReceivedTimer}\n          />\n          <div id=\"timerBox\">Timer: {this.state.minutes} : {this.state.seconds}\n\n          </div>\n        </>\n      )\n    }\n    else {\n      return(\n        <>\n          <ActionCableConsumer\n            channel={{channel: 'TimerChannel', id:`${this.props.gameId}`}}\n            onReceived={this.handleReceivedTimer}\n          />\n          <div id=\"timerBox\">Timer: {this.state.minutes} : {this.state.seconds}\n          </div>\n        </>\n      )\n    }\n\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}