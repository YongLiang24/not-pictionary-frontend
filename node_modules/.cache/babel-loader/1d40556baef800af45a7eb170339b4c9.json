{"ast":null,"code":"import _classCallCheck from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yong/new-pictionary/not-pictionary-frontend/src/components/GamesPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { Redirect } from 'react-router-dom';\n\nvar GamesPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GamesPage, _Component);\n\n  function GamesPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GamesPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GamesPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      availableGames: [],\n      gameName: '',\n      redirect: false,\n      currentGameId: '',\n      currentGameMode: ''\n    };\n\n    _this.handleAddGames = function (ev) {\n      ev.preventDefault();\n      console.log('adding new game');\n      var playerId = JSON.parse(localStorage.getItem('playerData')).playerId;\n      var gameName = ev.target.createGame.value;\n      fetch(\"\".concat(API_ROOT, \"/game\"), {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({\n          playerId: playerId,\n          gameName: gameName\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this.setState({\n          redirect: true,\n          currentGameId: json.id,\n          currentGameMode: 'draw'\n        });\n      });\n    };\n\n    _this.handleJoiningGame = function (ev) {\n      // post player joining game, redirect to game page\n      var playerId = JSON.parse(localStorage.getItem('playerData')).playerId;\n      var gameId = ev.target.id;\n      fetch(\"\".concat(API_ROOT, \"/game/\").concat(gameId), {\n        method: 'PATCH',\n        headers: HEADERS,\n        body: JSON.stringify({\n          playerId: playerId\n        })\n      }).then(_this.setState({\n        redirect: true,\n        currentGameId: gameId,\n        currentGameMode: 'guess'\n      }));\n    };\n\n    _this.renderRedirect = function () {\n      if (_this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/\".concat(_this.state.currentGameId, \"/\").concat(_this.state.currentGameMode),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GamesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // initial load of available games\n    // fetch(`${API_ROOT}/game`)\n    //   .then(response => response.json())\n    //   .then(json => this.setState({\n    //     availableGames: json}))\n    // add websocket listener to pull in new created games\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderRedirect(), \"Game Name:\", React.createElement(\"form\", {\n        onSubmit: this.handleAddGames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"New game name.\",\n        name: \"createGame\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"create game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Available Games:\"), React.createElement(\"div\", {\n        className: \"game-card-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.availableGames.map(function (game) {\n        return React.createElement(\"div\", {\n          key: game.id,\n          value: game,\n          className: \"game-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Game: \", game.id), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Name: \", game.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Drawer: \", game.drawer_id), React.createElement(\"button\", {\n          id: game.id,\n          name: game.id,\n          onClick: _this2.handleJoiningGame,\n          className: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Join Game\"));\n      })));\n    }\n  }]);\n\n  return GamesPage;\n}(Component);\n\nexport default GamesPage;","map":{"version":3,"sources":["/Users/yong/new-pictionary/not-pictionary-frontend/src/components/GamesPage.js"],"names":["React","Component","Fragment","API_ROOT","HEADERS","Redirect","GamesPage","state","availableGames","gameName","redirect","currentGameId","currentGameMode","handleAddGames","ev","preventDefault","console","log","playerId","JSON","parse","localStorage","getItem","target","createGame","value","fetch","method","headers","body","stringify","then","response","json","setState","id","handleJoiningGame","gameId","renderRedirect","map","game","name","drawer_id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { Redirect } from 'react-router-dom';\n\nclass GamesPage extends Component {\n  state = {\n    availableGames: [],\n    gameName: '',\n    redirect: false,\n    currentGameId: '',\n    currentGameMode: ''\n  }\n\n  componentDidMount() {\n    // initial load of available games\n    // fetch(`${API_ROOT}/game`)\n    //   .then(response => response.json())\n    //   .then(json => this.setState({\n    //     availableGames: json}))\n  }\n\n  // add websocket listener to pull in new created games\n\n  handleAddGames = (ev) =>{\n    ev.preventDefault()\n    console.log('adding new game')\n    const playerId = JSON.parse(localStorage.getItem('playerData')).playerId\n    const gameName = ev.target.createGame.value\n\n    fetch(`${API_ROOT}/game`, {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify({playerId, gameName})\n    })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          redirect: true,\n          currentGameId: json.id,\n          currentGameMode: 'draw'\n        })\n      })\n  }\n\n  handleJoiningGame = (ev) => {\n    // post player joining game, redirect to game page\n    const playerId = JSON.parse(localStorage.getItem('playerData')).playerId\n    const gameId = ev.target.id\n\n    fetch(`${API_ROOT}/game/${gameId}`, {\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify({playerId})\n    })\n      .then(\n        this.setState({\n          redirect:true,\n          currentGameId: gameId,\n          currentGameMode: 'guess'\n      }))\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={`/${this.state.currentGameId}/${this.state.currentGameMode}`}/>\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.renderRedirect()}\n\n        Game Name:\n        <form onSubmit={this.handleAddGames} >\n          <input type='text' placeholder='New game name.' name='createGame' required/>\n          <input type='submit' value='create game' />\n        </form>\n        <h3>Available Games:</h3>\n        <div className='game-card-container'>\n          {this.state.availableGames.map(game => {\n            return (\n              <div\n                key={game.id}\n                value={game}\n                className='game-card'\n              >\n                <h4>Game: {game.id}</h4>\n                <h4>Name: {game.name}</h4>\n                <p>Drawer: {game.drawer_id}</p>\n                <button\n                  id={game.id}\n                  name={game.id}\n                  onClick={this.handleJoiningGame}\n                  className='button'\n                >\n                  Join Game\n                </button>\n                </div>\n              )\n            })\n            }\n          </div>\n      </Fragment>\n    )\n  }\n}\nexport default GamesPage;\n"]},"metadata":{},"sourceType":"module"}