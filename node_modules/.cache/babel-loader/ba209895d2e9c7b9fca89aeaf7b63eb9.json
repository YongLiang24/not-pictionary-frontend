{"ast":null,"code":"import _classCallCheck from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yong/new-pictionary/not-pictionary-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yong/new-pictionary/not-pictionary-frontend/src/containers/GameView.js\";\nimport React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport { Redirect } from 'react-router-dom';\nimport Canvas from '../components/Canvas';\nimport PlayerInteraction from './PlayerInteraction';\nimport Timer from '../components/Timer';\nimport EndGame from '../components/EndGame';\n\nvar GameView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GameView, _Component);\n\n  function GameView(props) {\n    var _this;\n\n    _classCallCheck(this, GameView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GameView).call(this, props));\n\n    _this.endGame = function (endCondition) {\n      console.log('end game');\n\n      _this.setState({\n        gameOver: true,\n        endCondition: endCondition\n      }); // patch to game/:id to change isAvailable to false, isWon to false/true\n\n\n      var endingState = {\n        is_active: false,\n        endCondition: endCondition\n      };\n\n      if (endCondition === 'timeUp') {\n        endingState.is_won = false; // alert(`Game Over. You ran out of time!`)\n      } else if (endCondition === 'rightAnswer') {\n        endingState.is_won = true; // alert(`You win!`)\n      }\n\n      fetch(API_ROOT + \"/game/\".concat(_this.props.gameId), {\n        method: 'PATCH',\n        headers: HEADERS,\n        body: JSON.stringify(endingState)\n      }).then().then();\n    };\n\n    _this.renderRedirect = function () {\n      if (_this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/games\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.renderEndGame = function () {\n      if (_this.state.gameOver) {\n        return React.createElement(EndGame, {\n          endCondition: _this.state.endCondition,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.state = {\n      gameOver: false,\n      redirect: false,\n      endCondition: ''\n    };\n    return _this;\n  }\n\n  _createClass(GameView, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.isDrawing) {\n        return React.createElement(\"div\", {\n          className: \"gameContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.renderEndGame(), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"You are... Drawing\"), React.createElement(Timer, {\n          gameOver: this.state.gameOver,\n          endGame: this.endGame,\n          gameId: this.props.gameId,\n          withButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Canvas, {\n          gameId: this.props.gameId,\n          isDrawing: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(PlayerInteraction, {\n          gameId: this.props.gameId,\n          isDrawing: true,\n          gameOver: this.state.gameOver,\n          endGame: this.endGame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"gameContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, this.renderEndGame(), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"You are... Guessing\"), React.createElement(Timer, {\n          gameOver: this.state.gameOver,\n          endGame: this.endGame,\n          gameId: this.props.gameId,\n          withButton: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(Canvas, {\n          gameId: this.props.gameId,\n          isDrawing: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(PlayerInteraction, {\n          gameId: this.props.gameId,\n          isDrawing: false,\n          endGame: this.endGame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return GameView;\n}(Component);\n\nexport default GameView;","map":{"version":3,"sources":["/Users/yong/new-pictionary/not-pictionary-frontend/src/containers/GameView.js"],"names":["React","Component","Fragment","API_ROOT","HEADERS","ActionCableConsumer","Redirect","Canvas","PlayerInteraction","Timer","EndGame","GameView","props","endGame","endCondition","console","log","setState","gameOver","endingState","is_active","is_won","fetch","gameId","method","headers","body","JSON","stringify","then","renderRedirect","state","redirect","renderEndGame","isDrawing"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport { Redirect } from 'react-router-dom';\nimport Canvas from '../components/Canvas';\nimport PlayerInteraction from './PlayerInteraction'\nimport Timer from '../components/Timer'\nimport EndGame from '../components/EndGame'\n\n\nclass GameView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gameOver: false,\n      redirect: false,\n      endCondition: ''\n    }\n  }\n\n  endGame = (endCondition) => {\n    console.log('end game')\n    this.setState({gameOver: true, endCondition})\n    // patch to game/:id to change isAvailable to false, isWon to false/true\n    let endingState = {is_active: false, endCondition}\n\n    if (endCondition === 'timeUp') {\n      endingState.is_won = false\n      // alert(`Game Over. You ran out of time!`)\n    } else if (endCondition === 'rightAnswer') {\n      endingState.is_won = true\n      // alert(`You win!`)\n    }\n\n    fetch(API_ROOT+`/game/${this.props.gameId}`,{\n      method: 'PATCH',\n      headers: HEADERS,\n      body: JSON.stringify(endingState)\n    })\n      .then()\n      .then()\n\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/games'/>\n    }\n  }\n\n  renderEndGame = () => {\n    if (this.state.gameOver) {\n      return <EndGame endCondition={this.state.endCondition}/>\n    }\n  }\n\n  render() {\n    if (this.props.isDrawing) {\n      return (\n        <div className='gameContainer'>\n          {/* {this.renderRedirect()} */}\n          {this.renderEndGame()}\n          <h2>You are... Drawing</h2>\n          <Timer\n            gameOver={this.state.gameOver}\n            endGame={this.endGame}\n            gameId={this.props.gameId}\n            withButton={true}\n          />\n          <Canvas gameId={this.props.gameId} isDrawing={true}/>\n          <PlayerInteraction\n            gameId={this.props.gameId}\n            isDrawing={true}\n            gameOver={this.state.gameOver}\n            endGame={this.endGame}\n          />\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className='gameContainer'>\n          {/* {this.renderRedirect()} */}\n          {this.renderEndGame()}\n          <h2>You are... Guessing</h2>\n          <Timer\n            gameOver={this.state.gameOver}\n            endGame={this.endGame}\n            gameId={this.props.gameId}\n            withButton={false}\n          />\n          <Canvas gameId={this.props.gameId} isDrawing={false} />\n          <PlayerInteraction\n            gameId={this.props.gameId}\n            isDrawing={false}\n            endGame={this.endGame}\n          />\n        </div>\n      )\n    }\n  }\n}\nexport default GameView;\n"]},"metadata":{},"sourceType":"module"}